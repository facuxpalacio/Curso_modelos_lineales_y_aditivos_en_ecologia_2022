---
title: "Análisis Lucía Magnin"
author: ""
date: "`r Sys.Date()`"
output: 
  tufte::tufte_html:
    toc: true
---
```{r setup, include=FALSE}
# Suppress messages, warnings, and errors for document aesthetics.
knitr::opts_chunk$set(message=FALSE, warning=FALSE, error=FALSE, echo=TRUE)
```

\

## Carga de paquetes y datos
```{r}
library(psych)
library(MuMIn)
library(sjPlot)
library(ggplot2)
library(ggpubr)
library(multcomp)

arqueo <- read.table("C:/RD/datos_lucia_magnin.txt", head = T)
arqueo$Geomorfo_LP <- as.factor(arqueo$Geomorfo_LP)
arqueo$sin.aspect <- sin(arqueo$aspect)
arqueo$cos.aspect <- cos(arqueo$aspect)
```

#### Función para obtener pseudo-R2
```{r}
R2logit<- function(y, model){
    R2<- 1-(model$deviance/model$null.deviance)
    return(R2)
    }
```

#### Filtrar los datos en base al tipo de sitio
```{r}
A <- subset(arqueo, FUN == "A" | FUN == "NS")
AC <- subset(arqueo, FUN == "AC" | FUN == "NS")
C <- subset(arqueo, FUN == "C" | FUN == "NS")
CC <- subset(arqueo, FUN == "CC" | FUN == "NS")
Ch <- subset(arqueo, FUN == "Ch" | FUN == "NS")
CT <- subset(arqueo, FUN == "CT" | FUN == "NS")
LAL <- subset(arqueo, FUN == "LAL" | FUN == "NS")
LAM <- subset(arqueo, FUN == "LAM" | FUN == "NS")
T <- subset(arqueo, FUN == "T" | FUN == "NS")
TO <- subset(arqueo, FUN == "TO" | FUN == "NS")
```

\

## Gráficos circulares
```{r graf}
a<-ggplot(A, aes(x = aspect, fill = FUN)) + coord_polar(start = 300, direction = -1) + 
      geom_histogram(aes(y = stat(count) / sum(count)*100), bins = 20) + 
      scale_x_continuous("", limits = c(0, 360), 
      breaks = seq(0, 360, by = 45), labels = seq(0, 360, by = 45)) +
      theme_minimal() + ylab("Frecuencia relativa")

ac<-ggplot(AC, aes(x = aspect, fill = FUN)) + coord_polar(start = 300, direction = -1) + 
      geom_histogram(aes(y = stat(count) / sum(count)*100), bins = 20) + 
      scale_x_continuous("", limits = c(0, 360), 
      breaks = seq(0, 360, by = 45), labels = seq(0, 360, by = 45)) +
      theme_minimal() + ylab("Frecuencia relativa")

c<-ggplot(C, aes(x = aspect, fill = FUN)) + coord_polar(start = 300, direction = -1) + 
      geom_histogram(aes(y = stat(count) / sum(count)*100), bins = 20) + 
      scale_x_continuous("", limits = c(0, 360), 
      breaks = seq(0, 360, by = 45), labels = seq(0, 360, by = 45)) +
      theme_minimal() + ylab("Frecuencia relativa")

cc<-ggplot(CC, aes(x = aspect, fill = FUN)) + coord_polar(start = 300, direction = -1) + 
      geom_histogram(aes(y = stat(count) / sum(count)*100), bins = 20) + 
      scale_x_continuous("", limits = c(0, 360), 
      breaks = seq(0, 360, by = 45), labels = seq(0, 360, by = 45)) +
      theme_minimal() + ylab("Frecuencia relativa")

ch<-ggplot(Ch, aes(x = aspect, fill = FUN)) + coord_polar(start = 300, direction = -1) + 
      geom_histogram(aes(y = stat(count) / sum(count)*100), bins = 20) + 
      scale_x_continuous("", limits = c(0, 360), 
      breaks = seq(0, 360, by = 45), labels = seq(0, 360, by = 45)) +
      theme_minimal() + ylab("Frecuencia relativa")

ct<-ggplot(CT, aes(x = aspect, fill = FUN)) + coord_polar(start = 300, direction = -1) + 
      geom_histogram(aes(y = stat(count) / sum(count)*100), bins = 20) + 
      scale_x_continuous("", limits = c(0, 360), 
      breaks = seq(0, 360, by = 45), labels = seq(0, 360, by = 45)) +
      theme_minimal() + ylab("Frecuencia relativa")

lal<-ggplot(LAL, aes(x = aspect, fill = FUN)) + coord_polar(start = 300, direction = -1) + 
      geom_histogram(aes(y = stat(count) / sum(count)*100), bins = 20) + 
      scale_x_continuous("", limits = c(0, 360), 
      breaks = seq(0, 360, by = 45), labels = seq(0, 360, by = 45)) +
      theme_minimal() + ylab("Frecuencia relativa")

lam<-ggplot(LAM, aes(x = aspect, fill = FUN)) + coord_polar(start = 300, direction = -1) + 
      geom_histogram(aes(y = stat(count) / sum(count)*100), bins = 20) + 
      scale_x_continuous("", limits = c(0, 360), 
      breaks = seq(0, 360, by = 45), labels = seq(0, 360, by = 45)) +
      theme_minimal() + ylab("Frecuencia relativa")

t<-ggplot(T, aes(x = aspect, fill = FUN)) + coord_polar(start = 300, direction = -1) + 
      geom_histogram(aes(y = stat(count) / sum(count)*100), bins = 20) + 
      scale_x_continuous("", limits = c(0, 360), 
      breaks = seq(0, 360, by = 45), labels = seq(0, 360, by = 45)) +
      theme_minimal() + ylab("Frecuencia relativa")

to<-ggplot(TO, aes(x = aspect, fill = FUN)) + coord_polar(start = 300, direction = -1) + 
      geom_histogram(aes(y = stat(count) / sum(count)*100), bins = 20) + 
      scale_x_continuous("", limits = c(0, 360), 
      breaks = seq(0, 360, by = 45), labels = seq(0, 360, by = 45)) +
      theme_minimal() + ylab("Frecuencia relativa")

ggarrange(a, ac, nrow = 2, ncol = 2)
ggarrange(c, cc, nrow = 2, ncol = 2)
ggarrange(ch, ct, nrow = 2, ncol = 2)
ggarrange(lal, lam, nrow = 2, ncol = 2)
ggarrange(t, to, nrow = 2, ncol = 2)
```


\


## Selección de modelos

\

### A
```{r a}
A <- subset(arqueo, FUN == "A" | FUN == "NS")
A$sitio <- ifelse(A$FUN == "A", 1, 0)
m1A <- glm(sitio ~ slope + sin.aspect + cos.aspect,
           family = binomial, data = A)
m2A <- glm(sitio ~ slope + sin.aspect + cos.aspect + cst_dst_ag,
           family = binomial, data = A)
m3A <- glm(sitio ~ slope + sin.aspect + cos.aspect + cst_dst_ag + cst_dst_cam.ppal,
           family = binomial, data = A)
m4A  <- glm(sitio ~ slope + sin.aspect + cos.aspect + cst_dst_ag + cst_dst_cam.ppal + accesibilidad,
           family = binomial, data = A)
m5A  <- glm(sitio ~ slope + sin.aspect + cos.aspect + cst_dst_ag + cst_dst_cam.ppal + accesibilidad + Cuenca_Visual,
           family = binomial, data = A)
m6A <- glm(sitio ~ 1, family = binomial, data = A)

modelosA <- list(m1A, m2A, m3A, m4A, m5A, m6A)

aic.tableA <- model.sel(modelosA, rank = "AICc")

aic.tableA
R2logit(A$sitio, m4A)

m4zA  <- glm(sitio ~ scale(slope) + scale(sin.aspect) + scale(cos.aspect) + 
scale(cst_dst_ag) + scale(cst_dst_cam.ppal) + scale(accesibilidad) + scale(Cuenca_Visual),
           family = binomial, data = A)
summary(m4zA)
plot_model(m4zA, type="std")

```

\

### AC
```{r ac}
AC <- subset(arqueo, FUN == "AC" | FUN == "NS")
AC <- subset(arqueo, Geomorfo_LP != "5")
AC$sitio <- ifelse(AC$FUN == "AC", 1, 0)
m1AC <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP,
           family = binomial, data = AC)
m2AC <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + hill_invierno,
           family = binomial, data = AC)
m3AC <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + hill_invierno + Cuenca_Visual,
           family = binomial, data = AC)
m4AC  <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + hill_invierno + Cuenca_Visual + accesibilidad,
           family = binomial, data = AC)
m5AC  <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + hill_invierno + Cuenca_Visual + accesibilidad + cst_dst_afl,
           family = binomial, data = AC)
m6AC <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + hill_invierno + Cuenca_Visual + accesibilidad + cst_dst_ag + cst_dst_cam.ppal + 
                    cst_dst_CC + cst_dst_CT + cst_dst_LAM, family = binomial, data = AC)
m7AC <- glm(sitio ~ 1, family = binomial, data = AC)

modelosAC <- list(m1AC, m2AC, m3AC, m4AC, m5AC, m6AC, m7AC)

R2logit(AC$sitio, m1AC)

aic.tableAC <- model.sel(modelosAC, rank = "AICc")
aic.tableAC

m1zAC <- glm(sitio ~ scale(srtm_wgs84) + scale(slope) + scale(sin.aspect) + scale(cos.aspect) + Geomorfo_LP,
           family = binomial, data = AC)
summary(m1zAC)
plot_model(m1zAC, type="std")
```

#### Comparaciones múltiples
```{r}
multAC <- glht(m1AC, linfct = mcp(Geomorfo_LP = "Tukey"))
summary(multAC)
```

\

### C
```{r c}
C <- subset(arqueo, FUN == "C" | FUN == "NS")
C <- subset(C, Geomorfo_LP != "3")
C$sitio <- ifelse(C$FUN == "C", 1, 0)
m1C <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP,
           family = binomial, data = C)
m2C <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + hill_invierno,
           family = binomial, data = C)
m3C <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + hill_invierno + cst_dst_cam.ppal,
           family = binomial, data = C)
m4C  <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + hill_invierno + cst_dst_cam.ppal + accesibilidad,
           family = binomial, data = C)
m5C  <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + hill_invierno + cst_dst_cam.ppal + accesibilidad + Cuenca_Visual,
           family = binomial, data = C)
m6C <- glm(sitio ~ 1, family = binomial, data = C)

modelosC <- list(m1C, m2C, m3C, m4C, m5C, m6C)

aic.tableC <- model.sel(modelosC, rank = "AICc")
aic.tableC

R2logit(C$sitio, m1C)

m1zC <- glm(sitio ~ scale(srtm_wgs84) + scale(slope) + scale(sin.aspect) + scale(cos.aspect) + Geomorfo_LP,
           family = binomial, data = C)

summary(m1zC)
plot_model(m1zC, type="std")
```

#### Comparaciones múltiples
```{r}
multC <- glht(m1C, linfct = mcp(Geomorfo_LP = "Tukey"))
summary(multC)
```

\

### CC
```{r cc}
CC <- subset(arqueo, FUN == "CC" | FUN == "NS")
CC$sitio <- ifelse(CC$FUN == "CC", 1, 0)
m1CC <- glm(sitio ~ slope + sin.aspect + cos.aspect + Geomorfo_LP,
           family = binomial, data = CC)
m2CC <- glm(sitio ~ slope + sin.aspect + cos.aspect + Geomorfo_LP + cst_dst_afl,
           family = binomial, data = CC)
m3CC <- glm(sitio ~ slope + sin.aspect + cos.aspect + Geomorfo_LP + cst_dst_afl + cst_dst_AC + cst_dst_LAM,
           family = binomial, data = CC)
m4CC  <- glm(sitio ~ slope + sin.aspect + cos.aspect + Geomorfo_LP + cst_dst_afl + cst_dst_AC + cst_dst_LAM + Cuenca_Visual,
           family = binomial, data = CC)
m5CC <- glm(sitio ~ 1, family = binomial, data = CC)

modelosCC <- list(m1CC, m2CC, m3CC, m4CC, m5CC)
aic.tableCC <- model.sel(modelosCC, rank = "AICc")
aic.tableCC
```

\

### Ch
```{r ch}
Ch <- subset(arqueo, FUN == "Ch" | FUN == "NS")
Ch <- subset(Ch, Geomorfo_LP != "5")
Ch$sitio <- ifelse(Ch$FUN == "Ch", 1, 0)
m1Ch <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP,
           family = binomial, data = Ch)
m2Ch <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + Cuenca_Visual,
           family = binomial, data = Ch)
m3Ch <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + Cuenca_Visual + cst_dst_LAM,
           family = binomial, data = Ch)
m4Ch  <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + Cuenca_Visual + cst_dst_LAM + accesibilidad,
           family = binomial, data = Ch)
m5Ch <- glm(sitio ~ 1, family = binomial, data = Ch)

modelosCh <- list(m1Ch, m2Ch, m3Ch, m4Ch, m5Ch)
aic.tableCh <- model.sel(modelosCh, rank = "AICc")
aic.tableCh

R2logit(Ch$sitio, m2Ch)

m2zCh <- glm(sitio ~ scale(srtm_wgs84) + scale(slope) + scale(sin.aspect) + scale(cos.aspect) + Geomorfo_LP + scale(Cuenca_Visual),
           family = binomial, data = Ch)

summary(m2zCh)
plot_model(m2zCh, type="std")
```

#### Comparaciones múltiples
```{r}
multCh <- glht(m2Ch, linfct = mcp(Geomorfo_LP = "Tukey"))
summary(multCh)
```

\

### CT
```{r ct}
CT <- subset(arqueo, FUN == "CT" | FUN == "NS")
CT$sitio <- ifelse(CT$FUN == "CT", 1, 0)
m1CT <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP,
           family = binomial, data = CT)
m2CT <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + hill_verano,
           family = binomial, data = CT)
m3CT <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + hill_verano + cst_dst_ag + cst_dst_afl + cst_dst_cant2,
           family = binomial, data = CT)
m4CT  <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + hill_verano + cst_dst_ag + cst_dst_afl + cst_dst_cant2 + Cuenca_Visual,
           family = binomial, data = CT)
m5CT <- glm(sitio ~ 1, family = binomial, data = CT)

modelosCT <- list(m1CT, m2CT, m3CT, m4CT, m5CT)
aic.tableCT <- model.sel(modelosCT, rank = "AICc")
aic.tableCT

R2logit(CT$sitio, m1CT)

m1zCT <- glm(sitio ~ scale(srtm_wgs84) + scale(slope) + scale(sin.aspect) + scale(cos.aspect) + Geomorfo_LP,
           family = binomial, data = CT)

summary(m1zCT)
plot_model(m1zCT, type="std")
```

#### Comparaciones múltiples
```{r}
multCT <- glht(m1CT, linfct = mcp(Geomorfo_LP = "Tukey"))
summary(multCT)
```

\

### LAL
```{r lal}
LAL <- subset(arqueo, FUN == "LAL" | FUN == "NS")
LAL$sitio <- ifelse(LAL$FUN == "LAL", 1, 0)
m1LAL <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP,
           family = binomial, data = LAL)
m2LAL <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + cst_dst_ag + cst_dst_afl + cst_dst_cant2,
           family = binomial, data = LAL)
m3LAL <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + cst_dst_ag + cst_dst_afl + cst_dst_cant2 + cst_dst_AC + cst_dst_CC,
           family = binomial, data = LAL)
m4LAL <- glm(sitio ~ 1, family = binomial, data = LAL)

modelosLAL <- list(m1LAL, m2LAL, m3LAL, m4LAL)
aic.tableLAL <- model.sel(modelosLAL, rank = "AICc")
aic.tableLAL

R2logit(LAL$sitio, m1LAL)

m1zLAL <- glm(sitio ~ scale(srtm_wgs84) + scale(slope) + scale(sin.aspect) + scale(cos.aspect) + Geomorfo_LP,
           family = binomial, data = LAL)

summary(m1zLAL)
plot_model(m1zLAL, type="std")
```

#### Comparaciones múltiples
```{r}
multLAL <- glht(m1LAL, linfct = mcp(Geomorfo_LP = "Tukey"))
summary(multLAL)
```

\

### LAM
```{r lam}
LAM <- subset(arqueo, FUN == "LAM" | FUN == "NS")
LAM <- subset(LAM, Geomorfo_LP!="5")
LAM$sitio <- ifelse(LAM$FUN == "LAM", 1, 0)
m1LAM <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP,
           family = binomial, data = LAM)
m2LAM <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + hill_verano,
           family = binomial, data = LAM)
m3LAM <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + hill_verano + cst_dst_ag + cst_dst_cant2,
           family = binomial, data = LAM)
m4LAM <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + hill_verano + cst_dst_ag + cst_dst_cant2 + Cuenca_Visual,
           family = binomial, data = LAM)
m5LAM <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + hill_verano + cst_dst_ag + cst_dst_cant2 + Cuenca_Visual + cst_dst_CC + cst_dst_Chenque,
           family = binomial, data = LAM)
m6LAM <- glm(sitio ~ 1, family = binomial, data = LAM)

modelosLAM <- list(m1LAM, m2LAM, m3LAM, m4LAM, m5LAM, m6LAM)
aic.tableLAM <- model.sel(modelosLAM, rank = "AICc")
aic.tableLAM

R2logit(LAM$sitio, m3LAM)

m3zLAM <- glm(sitio ~ scale(srtm_wgs84) + scale(slope) + scale(sin.aspect) + 
scale(cos.aspect) + Geomorfo_LP + scale(hill_verano) + scale(cst_dst_ag) + 
scale(cst_dst_cant2),
           family = binomial, data = LAM)
summary(m3zLAM)
plot_model(m3LAM, type="std")
```

#### Comparaciones múltiples
```{r}
multLAM <- glht(m3LAM, linfct = mcp(Geomorfo_LP = "Tukey"))
summary(multLAM)
```

\

### T
```{r t}
T <- subset(arqueo, FUN == "T" | FUN == "NS")
T <- subset(T, Geomorfo_LP != "3")
T <- subset(T, Geomorfo_LP != "5")
T$sitio <- ifelse(T$FUN == "T", 1, 0)
m1T <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect,
           family = binomial, data = T)
m2T <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + hill_verano,
           family = binomial, data = T)
m3T <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + hill_verano + cst_dst_cant2,
           family = binomial, data = T)
m4T <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + hill_verano + cst_dst_cant2 + Cuenca_Visual,
           family = binomial, data = T)
m5T <- glm(sitio ~ 1, family = binomial, data = T)

modelosT <- list(m1T, m2T, m3T, m4T, m5T)
aic.tableT <- model.sel(modelosT, rank = "AICc")
aic.tableT

m4zT <- glm(sitio ~ scale(srtm_wgs84) + scale(slope) + scale(sin.aspect) + scale(cos.aspect) +
scale(hill_verano) + scale(cst_dst_cant2) + scale(Cuenca_Visual),
           family = binomial, data = T)

summary(m4zT)
plot_model(m4zT, type="std")
```

\

### TO
```{r to}
TO <- subset(arqueo, FUN == "TO" | FUN == "NS")
TO$sitio <- ifelse(TO$FUN == "TO", 1, 0)
m1TO <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP,
           family = binomial, data = TO)
m2TO <- glm(sitio ~ srtm_wgs84 + slope + sin.aspect + cos.aspect + Geomorfo_LP + cst_dst_afl,
           family = binomial, data = TO)
m3TO <- glm(sitio ~ 1, family = binomial, data = TO)

modelosTO <- list(m1TO, m2TO, m3TO)
aic.tableTO <- model.sel(modelosTO, rank = "AICc")
aic.tableTO

R2logit(TO$sitio, m1TO)

m1zTO <- glm(sitio ~ scale(srtm_wgs84) + scale(slope) + scale(sin.aspect) + scale(cos.aspect) + Geomorfo_LP,
           family = binomial, data = TO)

summary(m1zTO)
plot_model(m1zTO, type="std")
```

#### Comparaciones múltiples
```{r}
multTO <- glht(m1TO, linfct = mcp(Geomorfo_LP = "Tukey"))
summary(multTO)
```

