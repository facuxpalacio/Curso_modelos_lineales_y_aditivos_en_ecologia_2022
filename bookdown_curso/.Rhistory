link = "logit", data = parasitos)
summary(ZAP)
ZANB <- hurdle(Intensity ~ Depth | Length + Depth, dist = "negbin",
link = "logit", data = parasitos)
lrtest(ZAP, ZANB)
library(lmtest)
lrtest(ZAP, ZANB)
data<-read.csv("C:/RD/allison.csv")
hist(data$LifeSpan)
hist(log(data$LifeSpan))
xyplot(log(LifeSpan)~log(BodyWt) | factor(Predation),
data=data, type=c("p","r"))
library(lattice)
m<-lm(log(LifeSpan)~log(BodyWt)*factor(Predation),data = data)
summary(m)
m<-lm(log(LifeSpan)~log(BodyWt)*Predation,data = data)
summary(m)
xyplot(log(LifeSpan)~log(BodyWt) | factor(Predation),
data=data, type=c("p","r"))
xyplot(log(LifeSpan)~log(BodyWt) | factor(Predation),
data=data, type=r)
xyplot(log(LifeSpan)~log(BodyWt) | factor(Predation),
data=data, type="r")
summary(m)
head(data)
data$predexp<-data$Predation+data$Exposure
m<-lm(log(LifeSpan)~Predation + Exposure + predexp,data = data)
summary(m)
data$predexp<-0.2*data$Predation+0.5*data$Exposure
m<-lm(log(LifeSpan)~Predation + Exposure + predexp,data = data)
summary(m)
cor(data[,c("Predation","Exposure","predexp")])
m<-lm(log(LifeSpan)~log(BodyWt)*Predation,data = data)
str(data)
hist(data$LifeSpan)
hist(data$TotalSleep)
d<-data.frame(BodyWt=70,Predation=1)
predict(m,newdata=d)
exp(3.19)
d<-data.frame(BodyWt=7000,Predation=1)
predict(m,newdata=d)
exp(3.91)
d<-data.frame(BodyWt=log(70),Predation=1)
exp(predict(m,newdata=d))
data$logbody <- log(data$BodyWt)
data$loglife <- log(data$LifeSpan)
m<-lm(loglife ~ logbody + Predation, data)
predict(m,newdata=data.frame(logbody=log(70),Predation=1))
exp(3.35)
summary(m)
m<-lm(loglife ~ logbody, data)
plot(data$logbody,data$loglife)
log(70)
exp(4.24)
summary(m)
2.28242+0.21094*log(70)
exp(3.17)
abline(m)
abu.dorm <- read.table("C:/RD/Sturnus dormideros 2009-2014.txt", head=T)
tapply(abu.dorm$nind, abu.dorm$año, sum) # abundancia por dormidero y aÃ±o
abu.dorm$aÃ±o <- as.factor(abu.dorm$aÃ±o)
interv.dorm <- read.table("C:/RD/Sturnus dormideros intervalos.txt", head=T)
dorm <- interv.dorm[interv.dorm$t>2, ]
str(dorm)
table(dorm$id)
length(unique(dorm$id))
length(unique(dorm$t))
head(dorm)
range(dorm$t)
table(dorm$hora)
tapply(abu.dorm$id, abu.dorm$año, length)
plantas.dorm <- read.table("C:/RD/Sturnus dormideros arboles.txt", head=T)
model.plant <- glm.nb(nind ~ diam_mayor_m, data = plantas.dorm1)
library(MASS)
model.plant <- glm.nb(nind ~ diam_mayor_m, data = plantas.dorm1)
plantas.dorm1 <- subset(plantas.dorm, nind>0)
model.plant <- glm.nb(nind ~ diam_mayor_m, data = plantas.dorm1)
summary(model.plant)
model.plant2 <- glm.nb(nind ~ volumen_m3, data = plantas.dorm1)
summary(model.plant1)
summary(model.plant2)
interv.dorm <- read.table("C:/RD/Sturnus dormideros intervalos.txt", head=T)
dorm <- interv.dorm[interv.dorm$t>2, ]
mt<-gamm(nind_dormidero ~ s(t, k = 7), random = list(id = ~1),
correlation = corAR1(form = ~t),
family = poisson, method = "REML", data = dorm)
library(mgcv)
mt<-gamm(nind_dormidero ~ s(t, k = 7), random = list(id = ~1),
correlation = corAR1(form = ~t),
family = poisson, method = "REML", data = dorm)
summary(m$gam)
summary(mt$gam)
plot(m$gam)
plot(mt$gam)
gam.check(mt)
gam.check(mt$gam)
mt<-gamm(nind_dormidero ~ s(t, k = 8), random = list(id = ~1),
correlation = corAR1(form = ~t),
family = poisson, method = "REML", data = dorm)
mt<-gamm(nind_dormidero ~ s(t), random = list(id = ~1),
correlation = corAR1(form = ~t),
family = poisson, method = "REML", data = dorm)
mt<-gamm(nind_dormidero ~ s(t, k = 6), random = list(id = ~1),
correlation = corAR1(form = ~t),
family = poisson, method = "REML", data = dorm)
gam.check(mt$gam)
plot(mt$gam)
mt<-gamm(nind_dormidero ~ s(t, k = 7), random = list(id = ~1),
correlation = corAR1(form = ~t),
family = poisson, method = "REML", data = dorm)
gam.check(mt$gam)
?gam.check
m<-gamm(nind_dormidero ~ s(t, k = 7), random = list(id = ~1),
family = poisson, method = "REML", data = dorm)
AIC(mt$lme, m$lme)
gam.check(m$gam)
plot(m$gam)
library(sp)
library(gstat)
library(glmmTMB)
data(meuse)
psycho <- read.table("C:/RD/Psychotria_El_Corte_2012.txt", header = TRUE)
head(psycho)
hist(psycho$x.diam, xlab = "Diámetro promedio del fruto", ylab = "Frecuencia")
plot(psycho$x, psycho$y, pch = 19)
psycho <- read.table("C:/RD/Psychotria_El_Corte_2012.txt", header = TRUE)
n <- 6                                              ## Number of time points
x <- mvrnorm(mu = rep(0,n),
Sigma = .7 ^ as.matrix(dist(1:n)) )    ## Simulate the process using the MASS package
y <- x + rnorm(n)
library(mvrnorm)
library(MASS)
n <- 6                                              ## Number of time points
x <- mvrnorm(mu = rep(0,n),
Sigma = .7 ^ as.matrix(dist(1:n)) )    ## Simulate the process using the MASS package
y <- x + rnorm(n)
times <- factor(1:n, levels=1:n)
levels(times)
group <- factor(rep(1,n))
dat0 <- data.frame(y,times,group)
head(dat0)
x <- sample(1:2, 10, replace=TRUE)
y <- sample(1:2, 10, replace=TRUE)
dat1$times <- numFactor(dat1$times)
levels(dat1$times)
psycho$pos <- numFactor(psycho$x, psycho$y)
head(psycho)
psycho$group <- factor(rep(1, nrow(psycho)))
psycho$group <- factor(rep(1, nrow(psycho)))
head(psycho)
glmm.espacial <- glmmTMB(x.diam ~ n.infrut + exp(pos + 0|group), family = gaussian, data = psycho)
lm.no_espacial <- lm(x.diam ~ n.infrut, data = psycho)
AIC(glmm.espacial,lm.no_espacial)
summary(glmm.espacial)
summary(lm.no_espacial)
newdata <- data.frame(pos = numFactor(expand.grid(n.infrut = psycho$n.infrut, x = pyscho$x, y = psycho$y)) )
newdata <- data.frame(pos = numFactor(expand.grid(n.infrut = psycho$n.infrut, x = psycho$x, y = psycho$y)))
head(newdata)
newdata <- data.frame( pos=numFactor(expand.grid(x=1:3,y=1:3)) )
newdata$group <- factor(rep(1, nrow(newdata)))
head(newdata)
predict_col <- function(i) {
newdata <- data.frame( pos = numFactor(expand.grid(1:87,i)))
newdata$group <- factor(rep(1,nrow(newdata)))
predict(f, newdata=newdata, type="response", allow.new.levels=TRUE)
}
pred <- sapply(1:61, predict_col)
newdata <- data.frame(pos = numFactor(expand.grid(n.infrut = psycho$n.infrut, x = psycho$x, y = psycho$y)))
newdata$group <- factor(rep(1, nrow(newdata)))
predict_col <- function(i) {
newdata <- data.frame(pos = numFactor(expand.grid(1:87, i)))
newdata$group <- factor(rep(1, nrow(newdata)))
predict(glmm.espacial, newdata = newdata, type="response", allow.new.levels = TRUE)
}
pred <- sapply(1:61, predict_col)
head(newdata)
newdata <- data.frame(expand.grid(pos = numFactor(expand.grid(x = psycho$x, y = psycho$y)),
n.infrut = psycho$n.infrut))
head(newdata)
newdata$group <- factor(rep(1, nrow(newdata)))
predict_col <- function(i) {
newdata <- data.frame(pos = numFactor(expand.grid(1:87, i)))
newdata$group <- factor(rep(1, nrow(newdata)))
predict(glmm.espacial, newdata = newdata, type="response", allow.new.levels = TRUE)
}
pred <- sapply(1:61, predict_col)
newdata$group <- factor(rep(1, nrow(newdata)))
pred <- sapply(1:61, predict_col)
data<-read.table("C:/RD/FineScale_Dataset_GAMM_OFB2019.txt",head=T)
head(data)
plot(data$julianday,data$presence)
str(data)
plot(data$dayangle_deg, data$presence)
names(data)
m<-gamm(presence ~ s(dayangle_deg) + s(tideangle_deg) + s(seasonangle_deg),family=binomial,correlation = corAR1(form = ~julianday), data=data)
library(mgcv)
m<-gamm(presence ~ s(dayangle_deg) + s(tideangle_deg) + s(seasonangle_deg),family=binomial,correlation = corAR1(form = ~julianday), data=data)
m<-gam(presence ~ s(dayangle_deg) + s(tideangle_deg) + s(seasonangle_deg),family=binomial, data=data)
summary(m)
data<-read.table("C:/RD/Weather_CBB_flight.txt",head=T)
head(data)
pairs(data[,c(3,5,8,10,12)])
pairs(data[,c(2,5,8,10,12)])
pairs(data[,c(4:5,8,10,12)])
m<-gam(Log_CBB ~ s(Mean_temp) + s(Max_RH) + s(Total_Rain),family=poisson, data=data)
head(dat)
head(data)
m<-gam(Log_CBB ~ s(Mean_temp) + s(Max_RH) + s(Total_rain),family=poisson, data=data)
summary(m)
plot(m)
m<-gam(Mean_CBB ~ s(Mean_temp) + s(Max_RH) + s(Total_rain),family=poisson, data=data)
plot(m)
hist(data$Mean_CBB)
m<-gam(Mean_CBB ~ s(Mean_temp) + s(Max_RH) + s(Total_rain),family=nb, data=data)
plot(m)
head(data)
table(data$Date)
data(Salamanders)
?Salamanders
head(Salamanders)
pairs(Salamanders[, c(3, 5:7)])
pairs(Salamanders[, c(3, 5:7)])
pairs(Salamanders[, c(3, 5:7, 9)])
head(Salamanders)
hist(Salamanders$count)
head(Salamanders)
gamm.pois <- gamm(count ~ mined + s(Wtemp), family = poisson, random = list(site = ~1), data = Salamanders)
gamm.nb <- gamm(count ~ mined + s(Wtemp), family = nb, random = list(site = ~1), data = Salamanders)
summary(gamm.pois$gam)
summary(gamm.nb$gam)
plot(gamm.pois)
plot(gamm.pois$gam)
summary(gamm.nb$gam)
head(Salamanders)
cor(Salamanders[, c(3, 5:7, 9)])
gamm.pois <- gamm(count ~ mined + s(cover) + s(DOP) + s(Wtemp) + s(DOY), family = poisson, random = list(site = ~1), data = Salamanders)
gamm.pois <- gamm(count ~ mined + s(cover) + s(DOP) + s(Wtemp) + s(DOY), family = poisson, random = list(site = ~1), data = Salamanders)
gamm.nb <- gamm(count ~ mined + s(cover) + s(DOP) + s(Wtemp) + s(DOY), family = nb, random = list(site = ~1), data = Salamanders)
summary(gamm.pois$gam)
summary(gamm.nb$gam)
gamm.pois <- gamm(count ~ mined + s(Wtemp) + s(DOY), family = poisson, random = list(site = ~1), data = Salamanders)
gamm.pois <- gamm(count ~ mined + s(Wtemp) + s(DOY), family = poisson, random = list(site = ~1), data = Salamanders)
gamm.nb <- gamm(count ~ mined + s(Wtemp) + s(DOY), family = nb, random = list(site = ~1), data = Salamanders)
summary(gamm.pois$gam)
summary(gamm.nb$gam)
pairs(Salamanders[, c(3, 5:7, 9)])
gamm.pois <- gamm(count ~ mined + s(Wtemp) + s(DOP), family = poisson, random = list(site = ~1), data = Salamanders)
summary(gamm.pois$gam)
gamm.nb <- gamm(count ~ mined + s(Wtemp) + s(DOP), family = nb, random = list(site = ~1), data = Salamanders)
AIC(gamm.pois, gamm.nb)
AIC(gamm.pois$gam, gamm.nb$gam)
AIC(gamm.pois$gam)
AIC(gamm.pois$lme)
AIC(gamm.pois$lme, gamm.nb$lme)
gamm.pois2 <- gamm(count ~ mined + s(Wtemp) + s(DOP), family = poisson, random = list(site = ~1), data = Salamanders)
gamm.pois2 <- gamm(count ~ mined + s(Wtemp) + s(DOP), family = poisson, random = list(site = ~1), data = Salamanders)
gamm.pois1 <- gam(count ~ mined + s(Wtemp, bs = "re") + s(DOP, bs = "re"), family = poisson)
gamm.pois1 <- gam(count ~ mined + s(Wtemp, bs = "re") + s(DOP, bs = "re"), family = poisson, data = Salamanders)
AIC(gamm.pois1)
AIC(gamm.pois2$lme)
summary(gamm.nb$gam)
gam.nb <- gam(count ~ mined + s(Wtemp) + s(DOP), family = nb, data = Salamanders)
gam.nb <- gam(count ~ mined + s(Wtemp) + s(DOP), family = nb, data = Salamanders)
AIC(gamm.pois$lme, gamm.nb$lme, gam.nb)
plot(gamm.nb$gam)
gamm.pois <- gam(count ~ mined + s(Wtemp) + s(DOP), random = list(site = ~1), family = poisson)
gamm.nb <- gamm(count ~ mined + s(Wtemp) + s(DOP), family = nb, random = list(site = ~1), data = Salamanders)
gamm.pois <- gam(count ~ mined + s(Wtemp) + s(DOP), random = list(site = ~1), family = poisson, data = Salamanders)
AIC(gamm.pois$lme, gamm.nb$lme)
gamm.pois <- gam(count ~ mined + s(Wtemp) + s(DOP), random = list(site = ~1), family = poisson, data = Salamanders)
gamm.pois <- gamm(count ~ mined + s(Wtemp) + s(DOP), random = list(site = ~1), family = poisson, data = Salamanders)
gamm.bn <- gamm(count ~ mined + s(Wtemp) + s(DOP), family = nb, random = list(site = ~1), data = Salamanders)
AIC(gamm.pois$lme, gamm.bn$lme)
summary(gamm.nb$gam)
gamm.pois <- gamm(count ~ mined + s(DOP), random = list(site = ~1), family = poisson, data = Salamanders)
gamm.bn <- gamm(count ~ mined + s(DOP), family = nb, random = list(site = ~1), data = Salamanders)
summary(gamm.nb$gam)
pairs(Salamanders[, c(3, 5:7, 9)])
gamm.pois <- gamm(count ~ s(DOP), random = list(site = ~1), family = poisson, data = Salamanders)
summary(gamm.pois$gam)
gamm.pois <- gamm(count ~ s(DOY), random = list(site = ~1), family = poisson, data = Salamanders)
gamm.pois <- gamm(count ~ s(DOY), random = list(site = ~1), family = poisson, data = Salamanders)
summary(gamm.pois$gam)
gamm.pois <- gamm(count ~ s(Wtemp), random = list(site = ~1), family = poisson, data = Salamanders)
summary(gamm.pois$gam)
library(MuMIn)
?model.sel
log(10)
log(9, base=10)
10^(1/5)
hist(rnorm(100),breaks=10)
hist(rnorm(100),breaks=50)
hist(rnorm(100))
hist(rnorm(100),breaks=15)
x<-rpois(500,lambda=1)
hist(x)
hist(rpois(500, lambda=5))
hist(rpois(500, lambda=100))
var(rpois(500,lambda=100)
)
hist(rnorm(500,mean=10,sd=100))
barplot(x)
table(x)
barplot(table(x))
x<-c(1, 4, 7, 11, 5, 2)
y<-c(1, 2, 3, 4, 5, 6)
x+y
x*y
3*y
seq(10,11.3, by=0.1)
seq(9,7,by=2)
seq(7,9,by=-2)
?seq
seq(9,7)
seq(9,1,by=2)
seq(9,1)
seq(9,1,by=-2)
datos <- read.table("C:/RD/Solea.txt", header = TRUE)
m.bin <- glm(Solea_solea ~ temperature + transparency + salinity, family = binomial, data = datos)
obs <- datos$Solea_solea
pred.df <- data.frame(obs, pred = predict(m.bin, type = "response"))
head(pred.df)
p0 <- subset(pred.df, obs == 0)
p1 <- subset(pred.df, obs == 1)
p0
data(ChickWeight)
?ChickWeight
head(ChickWeight)
library(mgcv)
m<-gamm(Weight ~ s(Time), random = list(Chick=~1), data = ChickWeight)
m<-gamm(weight ~ s(Time), random = list(Chick=~1), data = ChickWeight)
summary(m)
summary(m$gam)
plot(m$gam)
library(ggplot2)
ggplot(data = Salamanders, aes(x = Wtemp, y = count)) +
geom_point() + facet_wrap(Site) +
theme_bw()
library(glmmTMB)
data(Salamanders)
ggplot(data = Salamanders, aes(x = Wtemp, y = count)) +
geom_point() + facet_wrap(Site) +
theme_bw()
head(Salamanders)
ggplot(data = Salamanders, aes(x = Wtemp, y = count)) +
geom_point() + facet_wrap(site) +
theme_bw()
ggplot(data = Salamanders, aes(x = Wtemp, y = count)) +
geom_point() + facet_wrap(~site) +
theme_bw()
head(biolum)
biolum <- read.table("C:/RD/ISIT.txt", header = TRUE)
head(biolum)
ggplot(data = biolum, aes(x = SampleDepth, y = Sources)) +
geom_point() + facet_wrap(~Station) +
theme_bw()
gam0 <- gam(Sources ~ s(SampleDepth), family = gaussian, data = Salamanders)
gam0 <- gam(Sources ~ s(SampleDepth), family = gaussian, data = biolum)
# Intercepto aleatorio
gamm1 <- gamm(Sources ~ s(SampleDepth), random = list(Station = ~1), family = gaussian, data = biolum)
# Intercepto y "pendiente" aleatorios
gamm2 <- gamm(Sources ~ s(SampleDepth), random = list(Station = ~1 + SampleDepth|Station), family = gaussian, data = biolum)
AIC(gam0, gamm1$lme, gamm2$lme)
plot(gamm2$gam)
library(itsadug)
gamtabs(gamm2)
gamtabs(gamm2$gam)
gamtabs(gamm2$gam)
gamtabs(gamm2$gam, type = "html")
gamtabs(gamm2$gam, type = "html")
plot_smooth(gamm2$gam)
plot_smooth(gamm2$gam, view = "SampleDepth")
plot_smooth(gamm2, view = "SampleDepth")
head(biolum)
str(biolum)
table(biolum$Year)
ggplot(data = biolum, aes(x = SampleDepth, y = Sources)) +
geom_point() + facet_wrap(~Year) +
theme_bw()
gam0 <- gam(Sources ~ Year + s(SampleDepth), family = gaussian, data = biolum)
# Intercepto aleatorio
gamm1 <- gamm(Sources ~ Year + s(SampleDepth), random = list(Station = ~1), family = gaussian, data = biolum)
# Intercepto y "pendiente" aleatorios
gamm2 <- gamm(Sources ~ Year + s(SampleDepth), random = list(Station = ~1 + SampleDepth|Station), family = gaussian, data = biolum)
AIC(gam0, gamm1$lme, gamm2$lme)
summary(gamm2$gam)
gamtabs(gamm2$gam, type = "HTML")
plot_smooth(gamm2$gam, view = "SampleDepth", plot_all = "Year", rm.ranef = TRUE)
str(biolum)
base<-read.table("C:/RD/sturnus llavallol.txt",head=T)
library(lme4)
stand<-function(x){(x-min(x))/(max(x)-min(x))}
xtru<-mean(stand(base$tru))
xmbo<-mean(stand(base$mbo))
xzau<-mean(stand(base$zau))
xaba<-mean(stand(base$aba))
# negativas
xcli<-mean(stand(base$cli))
xpdo<-mean(stand(base$pdo))
xcpi<-mean(stand(base$cpi))
xmmo<-mean(stand(base$mmo))
meanX<-data.frame(tru=xtru,mbo=xmbo,zau=xzau,aba=xaba,cli=xcli,pdo=xpdo,cpi=xcpi,mmo=xmmo)
# modelo promedio
b0<-mean(c(0.494332,0.494332+0.227383,0.494332-0.397660,0.494332-0.435377))
cli<--0.305371
tru<-0.096011
mbo<-0.029545
pdo<--0.001799
zau<-0.002457
aba<-0.007100
cpi<--0.004357
mmo<--0.001493
b<-as.matrix(c(b0,tru,mbo,zau,aba,cli,pdo,cpi,mmo))
X<-seq(0,1,length=500)
y.tru<-exp(as.matrix(cbind(1,data.frame(tru=X,meanX[,-1]))) %*% b)
y.mbo<-exp(as.matrix(cbind(1,meanX[,1],mbo=X,meanX[,3:8])) %*% b)
y.zau<-exp(as.matrix(cbind(1,meanX[,1:2],zau=X,meanX[,4:8])) %*% b)
y.aba<-exp(as.matrix(cbind(1,meanX[,1:3],aba=X,meanX[,5:8])) %*% b)
y.cli<-exp(as.matrix(cbind(1,meanX[,1:4],cli=X,meanX[,6:8])) %*% b)
y.pdo<-exp(as.matrix(cbind(1,meanX[,1:5],pdo=X,meanX[,7:8])) %*% b)
y.cpi<-exp(as.matrix(cbind(1,meanX[,1:6],cpi=X,meanX[,8])) %*% b)
y.mmo<-exp(as.matrix(cbind(1,data.frame(meanX[,-8]),mmo=X)) %*% b)
plot(X,y.tru,xlab="Relative abundance",ylab="Sturnus vulgaris \n abundance (ind/transect)",
type="l",lwd=2,cex.lab=1.5)
lines(X,y.mbo,lwd=2)
lines(X,y.zau,lwd=2)
lines(X,y.aba,lwd=2)
text(x=c(0.75,0.9,0.9,0.9),y=c(1.5,1.465,1.415,1.435),labels=c("Truf","Mbon","Zaur","Abad"))
par(mar=c(4,6,4,4)) # 7x5 in
plot(X,y.tru,xlab="Relative abundance",ylab="Sturnus vulgaris \n abundance (ind/transect)",
type="l",lwd=2,cex.lab=1.5)
lines(X,y.mbo,lwd=2)
lines(X,y.zau,lwd=2)
lines(X,y.aba,lwd=2)
text(x=c(0.75,0.9,0.9,0.9),y=c(1.5,1.465,1.415,1.435),labels=c("Truf","Mbon","Zaur","Abad"))
plot(X,y.cli,xlab="Relative abundance",ylab="Sturnus vulgaris \n abundance (ind/transect)",
type="l",lwd=2,cex.lab=1.5)
lines(X,y.pdo,lwd=2)
lines(X,y.cpi,lwd=2)
lines(X,y.mmo,lwd=2)
text(x=c(0.9,0.9,0.9,0.9),y=c(1.12,1.43,1.4),labels=c("Cliv","Pdom-Mmon","Cpic"))
plot(X,y.cli,xlab="Relative abundance",ylab="Sturnus vulgaris \n abundance (ind/transect)",
type="l",lwd=2,cex.lab=1.5)
head(base)
plot(X,y.tru,xlab="Relative abundance",ylab="Sturnus vulgaris \n abundance (ind/transect)",
type="l",lwd=2,cex.lab=1.5)
lines(X,y.mbo,lwd=2)
lines(X,y.zau,lwd=2)
lines(X,y.aba,lwd=2)
points(X,tru, col="red")
points(absv,tru, col="red")
points(base$absv,base$tru, col="red")
points(base$tru, base$absv, col="red")
points(base$xtru, base$absv, col="red")
points(xtru, base$absv, col="red")
stru
xtru
points(stand(base$tru), base$absv, col="red")
stand(base$tru)
base$absv
head(base)
100*20
base
abux.sv <- tapply(base$absv, base$tra, mean)
ababux.sv
abux.sv
abux.tru <- tapply(stand(base$tru), base$tra, mean)
points(abux.sv, abux.tru, col="red")
points(abux.tru, abux.sv, col="red")
abux.tru
abux.svu
abux.sv
plot(X,y.cli,xlab="Relative abundance",ylab="Sturnus vulgaris \n abundance (ind/transect)",
type="l",lwd=2,cex.lab=1.5)
lines(X,y.cpi,lwd=2)
plot(X,y.pdo,xlab="Relative abundance",ylab="Sturnus vulgaris \n abundance (ind/transect)",
type="l",lwd=2,cex.lab=1.5)
lines(X,y.cpi,lwd=2)
lines(X,y.mmo,lwd=2)
plot(X,y.cpi,xlab="Relative abundance",ylab="Sturnus vulgaris \n abundance (ind/transect)",
type="l",lwd=2,cex.lab=1.5)
lines(X,y.pdo,lwd=2)
lines(X,y.mmo,lwd=2)
text(x=c(0.9,0.9,0.9),y=c(1.12,1.43,1.4),labels=c("Pdom","Mmon","Ppic"))
plot(X,y.cpi,xlab="Relative abundance",ylab="Sturnus vulgaris \n abundance (ind/transect)",
type="l",lwd=2,cex.lab=1.5)
lines(X,y.pdo,lwd=2)
lines(X,y.mmo,lwd=2)
lines(X,y.mmo,lwd=2)
text(x=c(0.9,0.9,0.9),y=c(1.417,1.416,1.4),labels=c("Pdom","Mmon","Ppic"))
plot(X,y.cpi,xlab="Relative abundance",ylab="Sturnus vulgaris \n abundance (ind/transect)",
type="l",lwd=2,cex.lab=1.5)
plot(X,y.cpi,xlab="Relative abundance",ylab="Sturnus vulgaris \n abundance (ind/transect)",
type="l",lwd=2,cex.lab=1.5)
lines(X,y.pdo,lwd=2)
lines(X,y.mmo,lwd=2)
text(x=c(0.9,0.9,0.7),y=c(1.413,1.415,1.417),labels=c("Pdom","Mmon","Ppic"))
plot(X,y.cpi,xlab="Relative abundance",ylab="Sturnus vulgaris \n abundance (ind/transect)",
type="l",lwd=2,cex.lab=1.5)
lines(X,y.pdo,lwd=2)
lines(X,y.mmo,lwd=2)
text(x=c(0.9,0.9,0.7),y=c(1.417,1.415,1.413),labels=c("Pdom","Mmon","Ppic"))
plot(X,y.cpi,xlab="Relative abundance",ylab="Sturnus vulgaris \n abundance (ind/transect)",
type="l",lwd=2,cex.lab=1.5, ylim=c(1.41,1.419))
lines(X,y.pdo,lwd=2)
lines(X,y.mmo,lwd=2)
text(x=c(0.9,0.9,0.7),y=c(1.417,1.416,1.413),labels=c("Pdom","Mmon","Ppic"))
plot(X,y.cpi,xlab="Relative abundance",ylab="Sturnus vulgaris \n abundance (ind/transect)",
type="l",lwd=2,cex.lab=1.5, ylim=c(1.412,1.419))
lines(X,y.pdo,lwd=2)
lines(X,y.mmo,lwd=2)
text(x=c(0.9,0.9,0.7),y=c(1.417,1.416,1.413),labels=c("Pdom","Mmon","Ppic"))
