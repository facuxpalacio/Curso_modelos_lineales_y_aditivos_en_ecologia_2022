library(bookdown)
library(bookdown)
library(xfun)
install.packages("xfun")
library(bookdown)
parasitos <- read.table("C:/RD/ParasiteCod.txt", header = T)
library(pscl)
ZAP <- hurdle(Intensity ~ Depth | Length + Depth, dist = "poisson",
link = "logit", data = parasitos)
summary(ZAP)
ZANB <- hurdle(Intensity ~ Depth | Length + Depth, dist = "negbin",
link = "logit", data = parasitos)
lrtest(ZAP, ZANB)
library(lmtest)
lrtest(ZAP, ZANB)
data<-read.csv("C:/RD/allison.csv")
hist(data$LifeSpan)
hist(log(data$LifeSpan))
xyplot(log(LifeSpan)~log(BodyWt) | factor(Predation),
data=data, type=c("p","r"))
library(lattice)
m<-lm(log(LifeSpan)~log(BodyWt)*factor(Predation),data = data)
summary(m)
m<-lm(log(LifeSpan)~log(BodyWt)*Predation,data = data)
summary(m)
xyplot(log(LifeSpan)~log(BodyWt) | factor(Predation),
data=data, type=c("p","r"))
xyplot(log(LifeSpan)~log(BodyWt) | factor(Predation),
data=data, type=r)
xyplot(log(LifeSpan)~log(BodyWt) | factor(Predation),
data=data, type="r")
summary(m)
head(data)
data$predexp<-data$Predation+data$Exposure
m<-lm(log(LifeSpan)~Predation + Exposure + predexp,data = data)
summary(m)
data$predexp<-0.2*data$Predation+0.5*data$Exposure
m<-lm(log(LifeSpan)~Predation + Exposure + predexp,data = data)
summary(m)
cor(data[,c("Predation","Exposure","predexp")])
m<-lm(log(LifeSpan)~log(BodyWt)*Predation,data = data)
str(data)
hist(data$LifeSpan)
hist(data$TotalSleep)
d<-data.frame(BodyWt=70,Predation=1)
predict(m,newdata=d)
exp(3.19)
d<-data.frame(BodyWt=7000,Predation=1)
predict(m,newdata=d)
exp(3.91)
d<-data.frame(BodyWt=log(70),Predation=1)
exp(predict(m,newdata=d))
data$logbody <- log(data$BodyWt)
data$loglife <- log(data$LifeSpan)
m<-lm(loglife ~ logbody + Predation, data)
predict(m,newdata=data.frame(logbody=log(70),Predation=1))
exp(3.35)
summary(m)
m<-lm(loglife ~ logbody, data)
plot(data$logbody,data$loglife)
log(70)
exp(4.24)
summary(m)
2.28242+0.21094*log(70)
exp(3.17)
abline(m)
abu.dorm <- read.table("C:/RD/Sturnus dormideros 2009-2014.txt", head=T)
tapply(abu.dorm$nind, abu.dorm$año, sum) # abundancia por dormidero y aÃ±o
abu.dorm$aÃ±o <- as.factor(abu.dorm$aÃ±o)
interv.dorm <- read.table("C:/RD/Sturnus dormideros intervalos.txt", head=T)
dorm <- interv.dorm[interv.dorm$t>2, ]
str(dorm)
table(dorm$id)
length(unique(dorm$id))
length(unique(dorm$t))
head(dorm)
range(dorm$t)
table(dorm$hora)
tapply(abu.dorm$id, abu.dorm$año, length)
plantas.dorm <- read.table("C:/RD/Sturnus dormideros arboles.txt", head=T)
model.plant <- glm.nb(nind ~ diam_mayor_m, data = plantas.dorm1)
library(MASS)
model.plant <- glm.nb(nind ~ diam_mayor_m, data = plantas.dorm1)
plantas.dorm1 <- subset(plantas.dorm, nind>0)
model.plant <- glm.nb(nind ~ diam_mayor_m, data = plantas.dorm1)
summary(model.plant)
model.plant2 <- glm.nb(nind ~ volumen_m3, data = plantas.dorm1)
summary(model.plant1)
summary(model.plant2)
interv.dorm <- read.table("C:/RD/Sturnus dormideros intervalos.txt", head=T)
dorm <- interv.dorm[interv.dorm$t>2, ]
mt<-gamm(nind_dormidero ~ s(t, k = 7), random = list(id = ~1),
correlation = corAR1(form = ~t),
family = poisson, method = "REML", data = dorm)
library(mgcv)
mt<-gamm(nind_dormidero ~ s(t, k = 7), random = list(id = ~1),
correlation = corAR1(form = ~t),
family = poisson, method = "REML", data = dorm)
summary(m$gam)
summary(mt$gam)
plot(m$gam)
plot(mt$gam)
gam.check(mt)
gam.check(mt$gam)
mt<-gamm(nind_dormidero ~ s(t, k = 8), random = list(id = ~1),
correlation = corAR1(form = ~t),
family = poisson, method = "REML", data = dorm)
mt<-gamm(nind_dormidero ~ s(t), random = list(id = ~1),
correlation = corAR1(form = ~t),
family = poisson, method = "REML", data = dorm)
mt<-gamm(nind_dormidero ~ s(t, k = 6), random = list(id = ~1),
correlation = corAR1(form = ~t),
family = poisson, method = "REML", data = dorm)
gam.check(mt$gam)
plot(mt$gam)
mt<-gamm(nind_dormidero ~ s(t, k = 7), random = list(id = ~1),
correlation = corAR1(form = ~t),
family = poisson, method = "REML", data = dorm)
gam.check(mt$gam)
?gam.check
m<-gamm(nind_dormidero ~ s(t, k = 7), random = list(id = ~1),
family = poisson, method = "REML", data = dorm)
AIC(mt$lme, m$lme)
gam.check(m$gam)
plot(m$gam)
