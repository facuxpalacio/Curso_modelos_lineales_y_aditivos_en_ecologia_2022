y2 <- 2 + 1.5*x - 0.2*x^2
plot(x, y2)
y3 <- exp(x)
plot(x, y3)
y4 <- log(y3)
plot(x, y4)
layout(1)
set.seed(999)
layout(matrix(1:4, 2, 2))
x <- rnorm(100)
y1 <- 2 + 1.5*x
plot(x, y1)
y2 <- 2 + 1.5*x - 0.2*x^2
plot(x, y2)
y3 <- exp(x)
plot(x, y3)
y4 <- log(y3)
plot(x, y4)
layout(1)
x <- rnorm(100)
e <- rnorm(100, mean = 0, sd = 1)
y <- 2 + 1.5*x + e
plot(x, y)
cov(x, y)
cov(x, y)/(sd(x)*sd(y))
cor(x, y, method = "pearson")
cor.test(x, y)
layout(matrix(1:4, 2, 2))
x1 <- seq(1, 10, length = 100)
y1 <- 0.5 + 2*x1
plot(x1, y1, type = "l")
y2 <- 0.5 + 2*x1 - 0.2*x1^2
plot(x1, y2, type = "l")
y3 <- exp(-5 + x1)
plot(x1, y3, type = "l")
y4 <- exp(-5 + x1)/(1 + exp(-5 + x1))
plot(x1, y4, type = "l")
layout(1)
x <- rnorm(100)
e <- rnorm(100, mean = 0, sd = 1)
y <- 2 + 1.5*x + e
plot(x, y)
datos <- data.frame(x, y)
reg.simple <- lm(y ~ x, data = datos)
summary(reg.simple)
summary(reg.simple)$r.squared
SCE <- sum((mean(datos$y) - reg.simple$fitted)^2) # suma de cuadrados explicada
SCT <- sum((datos$y - mean(datos$y))^2) # suma de cuadrados total
R2 <- SCE/SCT
R2
abline(reg.simple, lwd = 2)
beta*sd(x)/sd(y)
beta <- summary(reg.simple)$coeff[2, 1]
beta*sd(x)/sd(y)
sqrt(summary(reg.simple)$r.squared)
cor(x, y)
pairs(Ad[, 3:6], pch = 19, col = "blue", lower.panel = NULL)
library(palmerpenguins)
str(penguins)
cor(penguins[, 3:6], use = "complete.obs")
pairs(penguins[, 3:6])
Ad <- subset(penguins, species == "Adelie")
model.Ad <- lm(bill_length_mm ~ body_mass_g + bill_depth_mm, data = Ad)
pairs.panels(Ad[, 3:6],
method = "pearson", # correlación
density = FALSE,  # gráficos de densidad
ellipses = FALSE, # elipses de confianza
lm = TRUE) # recta
library(psych)
pairs.panels(Ad[, 3:6],
method = "pearson", # correlación
density = FALSE,  # gráficos de densidad
ellipses = FALSE, # elipses de confianza
lm = TRUE) # recta
model.Ad <- lm(bill_length_mm ~ body_mass_g + bill_depth_mm, data = Ad)
summary(model.Ad)
sum.cuad.exp <- sum((mean(na.omit(Ad$bill_length_mm)) - model.Ad$fitted)^2)
sum.cuad.tot <- sum((na.omit(Ad$bill_length_mm) - mean(na.omit(Ad$bill_length_mm)))^2)
R2 <- sum.cuad.exp/sum.cuad.tot
R2
library(plot3D)
x <- Ad$body_mass_g
y <- Ad$bill_depth_mm
z <- Ad$bill_length_mm
x.pred <- seq(min(x, na.rm = T), max(x, na.rm = T), length = 30)
y.pred <- seq(min(y, na.rm = T), max(y, na.rm = T), length = 30)
xy <- expand.grid(body_mass_g = x.pred, bill_depth_mm = y.pred)
z.pred <- matrix(predict(model.Ad, newdata = xy), nrow = 30, ncol = 30)
scatter3D(x, y, z, pch = 18, cex = 2,
theta = 35, phi = 20, ticktype = "detailed",
xlab = "Masa corporal", ylab = "Alto del pico",
zlab = "Longitud del pico",
surf = list(x = x.pred, y = y.pred, z = z.pred, facets = NA))
library(visreg)
Ad$bill_depth_cat <- cut(Ad$bill_depth_mm, 3,
labels = c("Small", "Intermediate", "Large"))
model.Ad_cat <- lm(bill_length_mm ~ body_mass_g + bill_depth_cat, data = Ad)
visreg(model.Ad_cat, "body_mass_g", "bill_depth_cat", gg = TRUE)
model.Ad_cat <- lm(bill_length_mm ~ body_mass_g + bill_depth_cat, data = Ad)
visreg(model.Ad_cat, "body_mass_g", "bill_depth_cat", gg = TRUE)
Ad$bill_depth_cat <- cut(Ad$bill_depth_mm, 3,
labels = c("Pequeño", "Mediano", "Grande"))
model.Ad_cat <- lm(bill_length_mm ~ body_mass_g + bill_depth_cat, data = Ad)
visreg(model.Ad_cat, "body_mass_g", "bill_depth_cat", gg = TRUE)
model.penguins1 <- lm(bill_length_mm ~ body_mass_g + species, data = penguins)
summary(model.penguins1)
model.penguins2 <- lm(bill_length_mm ~ body_mass_g + species + body_mass_g:species, data = penguins)
summary(model.penguins2)
anova(model.penguins2)
t_coag <- c(8.8, 8.4, 7.9, 8.7, 9.1, 9.6, 9.5,
9.9, 9.0, 11.1, 9.6, 8.7, 10.4, 9.5)
droga <- c(rep("A", 7), rep("B", 7))
coag <- data.frame(t_coag, droga)
t.test(t_coag ~ droga, var.equal = TRUE, data = coag)
model.coag <- lm(t_coag ~ droga, data = coag)
summary(model.coag)
X_drogaA <- mean(t_coag[1:7])
X_drogaB <-  mean(t_coag[8:14])
X_drogaB - X_drogaA
var.test(t_coag[1:7], t_coag[8:14])
fotosint <- c(1.42, 1.4, 1.44, 1.44, 1.42, 1.46, 1.49, 1.5, 1.42, 1.48,
1.38, 1.36, 1.47, 1.39, 1.43, 1.41, 1.43, 1.45, 1.36, 1.46)
nutriente <- c(rep("N1", 10), rep("N2", 10))
plantas <- data.frame(fotosint, nutriente)
t.test(fotosint ~ nutriente, paired = TRUE, data = plantas)
boxplot(penguins$bill_length_mm ~ penguins$species)
model.spp <- aov(bill_length_mm ~ species, data = na.omit(penguins))
summary(model.spp)
summary(lm(bill_length_mm ~ species, data = na.omit(penguins)))
TukeyHSD(model.spp)
library(car)
vif(model.Ad)
hist(model.Ad$residuals)
qqPlot(model.Ad$residuals)
layout(matrix(1:4, 2, 2))
plot(model.Ad)
layout(1)
model.spp <- aov(bill_length_mm ~ species, data = na.omit(penguins))
resid.model.spp <- resid(model.spp)
boxplot(resid.model.spp ~ species, data = na.omit(penguins))
termplot(model.spp, se = TRUE, partial.resid = TRUE)
bartlett.test(resid.model.spp ~ species, data = na.omit(penguins))
# Analisis exploratorio
datos <- read.table("C:/RD/Solea.txt", header = TRUE)
str(datos)
hist(datos$Solea_solea)
table(datos$Solea_solea)
pairs(datos[, 4:12])
round(cor(datos[, 4:12]), 2)
# Analisis exploratorio
datos <- read.table("C:/RD/Solea.txt", header = TRUE)
str(datos)
hist(datos$Solea_solea)
table(datos$Solea_solea)
pairs(datos[, 4:12])
round(cor(datos[, 4:12]), 2)
m.bin <- glm(Solea_solea ~ temperature + transparency + salinity, family = binomial, data = datos)
summary(m.bin)
summary(m.bin)
# Pseudo-R2
1 - (m.bin$dev/m.bin$null)
library(performance)
# Coeficiente de determinación de Tjur
r2_tjur(m.bin)
# Análisis exploratorio
h <- read.table("C:/RD/hormigas.txt", header = T)
str(h)
h$Habitat <- as.factor(h$Habitat)
pairs(h[, 2:5])
round(cor(h[, c(2, 4:5)]), 2)
plot(table(h$Srich), xlab = "Numero de especies", ylab = "Frecuencia")
hist(h$Srich, xlab = "Numero de especies", ylab = "Frecuencia relativa", main = "", freq = FALSE)
# Ajuste de distribución a los datos
sim.pois <- dpois(x = 0:max(h$Srich), lambda = mean(h$Srich))
lines(x = 0:max(h$Srich), y = sim.pois, col = "blue", lwd = 2, type = "b")
var(h$Srich)/mean(h$Srich)
# Análisis exploratorio
h <- read.table("C:/RD/hormigas.txt", header = T)
str(h)
h$Habitat <- as.factor(h$Habitat)
pairs(h[, 2:5])
round(cor(h[, c(2, 4:5)]), 2)
plot(table(h$Srich), xlab = "Número de especies", ylab = "Frecuencia")
hist(h$Srich, xlab = "Número de especies", ylab = "Frecuencia relativa", main = "", freq = FALSE)
# Ajuste de distribución a los datos
sim.pois <- dpois(x = 0:max(h$Srich), lambda = mean(h$Srich))
lines(x = 0:max(h$Srich), y = sim.pois, col = "blue", lwd = 2, type = "b")
var(h$Srich)/mean(h$Srich)
m.pois <- glm(Srich ~ Latitude + Elevation + Habitat, family = poisson, data = h)
summary(m.pois)
m.qpois <- glm(Srich ~ Latitude + Elevation + Habitat, family = quasipoisson, data = h)
summary(m.qpois)
# Parámetro de sobredispersión
resid <- residuals(m.qpois, type = "pearson")
nparam <- length(m.qpois$coeff)
ndatos <- nrow(h)
disp.param <- sum(resid^2)/(ndatos - nparam)
disp.param
m.qpois.null <- glm(Srich ~ 1, family = quasipoisson, data = h)
summary(m.qpois.null)
library(DHARMa)
testDispersion(m.pois)
?rnbinom
hist(rpois(100,lambda=5))
hist(rnbinom(100,10,prob=0.7))
hist(rnbinom(n=100,mu=5,size=2))
hist(rnbinom(n=100,mu=5,size=5))
hist(rnbinom(n=100,mu=5,size=1))
hist(rpois(100,lambda=3))
hist(rnbinom(n=100,mu=3,size=1))
hist(rpois(100,lambda=3),xlim=c(0,15))
hist(rnbinom(n=100,mu=3,size=100))
hist(rnbinom(n=100,mu=3,size=100),xlim=c(0,15))
hist(rnbinom(n=100,mu=3,size=30),xlim=c(0,15))
m.qpois <- glm(Srich ~ Latitude + Elevation + Habitat, family = quasipoisson, data = h)
summary(m.qpois)
# Parámetro de sobredispersión
resid <- residuals(m.qpois, type = "pearson")
nparam <- length(m.qpois$coeff)
ndatos <- nrow(h)
disp.param <- sum(resid^2)/(ndatos - nparam)
disp.param
m.qpois.null <- glm(Srich ~ 1, family = quasipoisson, data = h)
summary(m.qpois.null)
library(DHARMa)
testDispersion(m.pois)
data<-read.txt("C:/RD/Phocoena_dataset.txt",head=T)
head(data)
dataw<-read.txt("C:/RD/Phocoena_dataset.txt",head=T)
dataw<-read.table("C:/RD/Phocoena_dataset.txt",head=T)
head(dataw)
plot(dataw$Month_EST,dataw$DPH_Porp)
library(mgcv)
m<-gam(DPH_Porp~s(Month_EST),family=binomial, data=dataw)
summary(m)
plot(m)
head(dataw)
table(dataw$Day_EST)
m<-gam(cbind(Day_EST,DPH_Porp)~s(Month_EST),family=binomial, data=dataw)
summary(m)
psycho <- read.table("C:/RD/Psychotria_El_Corte_2012.txt", header = TRUE)
psycho <- read.table("C:/RD/Psychotria_El_Corte_2012.txt", header = TRUE)
str(psycho)
hist(psycho$n.infrut, xlab = "Numero de infrutescencias", ylab = "Frecuencia")
gam6 <- gam(n.infrut ~ s(x, y), family = nb, method = "REML", data = psycho)
summary(gam6)
gam7 <- gam(n.infrut ~ te(x, y, d = c(1, 1)), family = nb, method = "REML", data = psycho)
library(mgcv)
gam7 <- gam(n.infrut ~ te(x, y, d = c(1, 1)), family = nb, method = "REML", data = psycho)
gam6 <- gam(n.infrut ~ te(x, y, d = c(1, 2)), family = nb, method = "REML", data = psycho)
?te
gam7 <- gam(n.infrut ~ te(x, y, d = c(2)), family = nb, method = "REML", data = psycho)
?vis.gam
biolum <- read.table("C:/RD/ISIT.txt", header = TRUE)
head(biolum)
gam6 <- gam(Sources_0.1 ~ s(SampleDepth) + s(Sources) + s(SampleDepth, by = Month, bs = "cr") + s(Sources, by = Month), family = Gamma, method = "REML", data = biolum)
biolum$Sources_0.1 <- biolum$Sources + 0.1
head(biolum)
hist(biolum$BottomDepth)
gam6 <- gam(Sources_0.1 ~ s(SampleDepth) + s(BottomDepth) + s(SampleDepth, by = Month, bs = "cr") + s(BottomDepth, by = Month), family = Gamma, method = "REML", data = biolum)
vis.gam(gam6, view = c("SampleDepth", "BottomDepth"), theta = 40, n.grid = 500, border = NA)
head(biolum)
str(biolum)
gam6 <- gam(Sources_0.1 ~ s(SampleDepth) + s(Year) + s(SampleDepth, by = Month, bs = "cr") + s(Year, by = Month), family = Gamma, method = "REML", data = biolum)
vis.gam(gam6, view = c("SampleDepth", "Year"), theta = 40, n.grid = 500, border = NA)
hist(biolum$Time)
head(biolum)
psycho <- read.table("C:/RD/Psychotria_El_Corte_2012.txt", header = TRUE)
str(psycho)
hist(psycho$n.infrut, xlab = "Numero de infrutescencias", ylab = "Frecuencia")
gam6 <- gam(n.infrut ~ s(x, y), family = nb, method = "REML", data = psycho)
summary(gam6)
gam7 <- gam(n.infrut ~ te(x, y), family = nb, method = "REML", data = psycho)
summary(gam7)
gam8 <- Tps(x = data.frame(Latitud = psycho$x, Longitud = psycho$y), Y = psycho$n.infrut)
draw(gam6)
library(gratia)
draw(gam6)
vis.gam(gam6)
?vis.gam
vis.gam(gam6, color = "terrain", type = "response", plot.type = "persp")
vis.gam(gam6, color = "terrain", type = "response", plot.type = "persp", thetha = 40)
vis.gam(gam6, color = "terrain", type = "response", plot.type = "persp", tetha = 40)
vis.gam(gam6, color = "terrain", type = "response", plot.type = "persp", theta = 40)
vis.gam(gam6, view = c("x", "y"), color = "terrain", type = "response", plot.type = "persp", theta = 40)
moscas <- read.table("C:/RD/Aluja_et_al_Tephritidae.txt", header = TRUE)
str(moscas)
gam1 <- gam(FTD_A_ludens ~ s(t, k = 10), family = gaussian, data = moscas)
moscas$t <- 1:nrow(moscas)
gam1 <- gam(FTD_A_ludens ~ s(t, k = 10), family = gaussian, data = moscas)
summary(gam1)
gam.check(gam1)
gam1 <- gam(FTD_A_ludens ~ s(t, k = 20), family = gaussian, data = moscas)
gam.check(gam1)
gam1 <- gam(FTD_A_ludens ~ s(t, k = 30), family = gaussian, data = moscas)
gam.check(gam1)
summary(gam1)
plot(gam1)
gamm.ar1 <- gamm(FTD_A_ludens ~ s(t, k = 30), family = gaussian, correlation = corAR1(form = ~ t), data = moscas)
AIC(gam1, gamm.ar1)
AIC(gam1, gamm.ar1$gam)
AIC(gam1)
AIC(gamm.ar1$lme)
AIC(gam1, gamm.ar1$lme)
gamm.ar2 <- gamm(FTD_A_ludens ~ s(t, k = 30), family = gaussian, correlation = corAR2(form = ~ t), data = moscas)
plot(gamm.ar1)
plot(gamm.ar1$gam)
summary(gamm.ar1)
summary(gamm.ar1$gam)
plot(gamm.ar1$gam)
gam.check(gamm.ar1$gam)
gamm.ar1 <- gamm(FTD_A_ludens ~ s(t, k = 50), family = gaussian, correlation = corAR1(form = ~ t), data = moscas)
gam.check(gamm.ar1$gam)
gamm.ar1 <- gamm(FTD_A_ludens ~ s(t, k = 60), family = gaussian, correlation = corAR1(form = ~ t), data = moscas)
gam.check(gamm.ar1$gam)
summary(gamm.ar1$gam)
?corAR1
head(moscas)
gamm.ar1 <- gamm(FTD_A_ludens ~ s(t), family = gaussian, correlation = corAR1(form = ~ t), data = moscas)
summary(gamm.ar1$gam)
head(moscas)
plot(moscas$t, moscas$SBC_A_ludens)
head(moscas)
plot(moscas$t, moscas$FTD_A_obliqua)
plot(moscas$t, moscas$FTD_A_obliqua)
gam1 <- gam(SBC_A_ludens ~ s(t, k = 30), family = gaussian, data = moscas)
gam.check(gam1)
plot(gam1)
gam1 <- gam(FTD_A_obliqua ~ s(t, k = 30), family = gaussian, data = moscas)
gam.check(gam1)
gam1 <- gam(FTD_A_obliqua ~ s(t, k = 60), family = gaussian, data = moscas)
gam.check(gam1)
gam1 <- gam(FTD_A_obliqua ~ s(t, k = 80), family = gaussian, data = moscas)
gam.check(gam1)
plot(gam1)
gamm.ar1 <- gamm(FTD_A_obliqua ~ s(t), family = gaussian, correlation = corAR1(form = ~ t), data = moscas)
gam.check(gamm.ar1$gam)
gamm.ar1 <- gamm(FTD_A_obliqua ~ s(t, k = 80), family = gaussian, correlation = corAR1(form = ~ t), data = moscas)
gam.check(gamm.ar1$gam)
head(moscas)
plot(moscas$t, moscas$FTD_A_ludens)
gam1 <- gam(FTD_A_obliqua ~ s(t, k = 60), family = gaussian, data = moscas)
gam.check(gam1)
gamm.ar1 <- gamm(FTD_A_ludens ~ s(t, k = 60), family = gaussian, correlation = corAR1(form = ~ t), data = moscas)
gamm.ar1 <- gamm(FTD_A_ludens ~ s(t, k = 60), family = gaussian, correlation = corAR1(form = ~ t), data = moscas)
gam.check(gamm.ar1$gam)
gamm.ar1 <- gamm(FTD_A_ludens ~ s(t, k = 30), family = gaussian, correlation = corAR1(form = ~ t), data = moscas)
gam.check(gamm.ar1$gam)
gamm.ar1 <- gamm(FTD_A_ludens ~ s(t, k = 9), family = gaussian, correlation = corAR1(form = ~ t), data = moscas)
gam.check(gamm.ar1$gam)
acf(gam1)
acf(resid(gam1))
library(visreg)
visreg(fit = "gam1", xvar = "t")
visreg(fit = gam1, xvar = "t")
gam1 <- gam(FTD_A_obliqua ~ s(t, k = 60), family = gaussian, data = moscas)
gam.check(gam1)
visreg(fit = gam1, xvar = "t")
visreg(fit = gam1, xvar = "t", type = "response")
summary(gam1)
gam1 <- gam(FTD_A_ludens ~ s(t, k = 60), family = gaussian, data = moscas)
gam1
gam.check(gam1)
visreg(fit = gam1, xvar = "t")
gamm.ar1 <- gamm(FTD_A_ludens ~ s(t, k = 60), family = gaussian, correlation = corAR1(form = ~ t), data = moscas)
visreg(fit = gamm.ar1, xvar = "t")
visreg(fit = gamm.ar1$gam, xvar = "t")
plot(gamm.ar1$gam)
?corAR1
?corARMA
gamm.ar1 <- gamm(FTD_A_ludens ~ s(t, k = 60), family = gaussian, correlation = corARMA(form = ~ t, p = 1, q = 1), data = moscas)
summary(gamm.ar1$gam)
gamm.ar1 <- gamm(FTD_A_ludens ~ s(t, k = 60), family = gaussian, correlation = corARMA(form = ~ t, p = 2, q = 1), data = moscas)
summary(gamm.ar1$gam)
getwd()
psycho <- read.table("Psychotria_El_Corte_2012.txt", header = TRUE)
psycho <- read.table("Psychotria_El_Corte_2012.txt", header = TRUE)
publish_book()
library(bookdown)
publish_book()
publish_book()
publish_book()
publish_book()
publish_book()
readLines("_bookdown.yml") %>%
str_extract_all("[A-z0-9_-]+.Rmd") %>%  # adjust as necessary...
unlist() %>%
map_chr(readLines, n = 1)
library(dplyr)
readLines("_bookdown.yml") %>%
str_extract_all("[A-z0-9_-]+.Rmd") %>%  # adjust as necessary...
unlist() %>%
map_chr(readLines, n = 1)
DT <- as.data.table(read_feather("DT_4_ind"))
set.seed(1)
dat <- gamSim(2, n = 4000, dist = "normal", scale = 1, verbose = FALSE)
mod <- gam(y ~ s(x, z, k = 30), data = dat$data, method = "REML")
draw(mod)
library(gratia)
draw(mod)
set.seed(1)
dat <- gamSim(2, n = 4000, dist = "normal", scale = 1, verbose = FALSE)
mod <- gam(y ~ s(x, z, k = 30), data = dat$data, method = "REML")
draw(mod)
library(mgcv)
set.seed(1)
dat <- gamSim(2, n = 4000, dist = "normal", scale = 1, verbose = FALSE)
mod <- gam(y ~ s(x, z, k = 30), data = dat$data, method = "REML")
draw(mod)
vis.gam(mod)
vis.gam(mod,theta=40)
vis.gam(mod,theta=30)
vis.gam(mod,theta=30,phi=30)
?draw
?vis.gam
vis.gam(mod,plot.type="contour")
mod <- gam(y ~ te(x, z), data = dat$data, method = "REML")
vis.gam(mod,theta=30,phi=30)
set.seed(2) ## simulate some data...
dat <- gamSim(1,n=400,dist="normal",scale=2)
dat$x1a <- dat$x1 ## copy x1 so bam allows 2 copies of x1
## Following removes identifiability problem, by removing
## linear terms from second smooth, and then re-inserting
## the one that was not a duplicate (x2)...
b <- bam(y~s(x0,x1)+s(x1a,x2,m=c(2,0))+x2,data=dat,discrete=TRUE)
k <- 10; m <- 2
y <- y[order(x)];x <- x[order(x)]
b <- gam(y~s(x,k=k,m=m),method="REML",
knots=list(x=seq(0,1,length=k)))
X <- model.matrix(b)
par(mfrow=c(1,2))
plot(x,X[,1],ylim=range(X),type="l")
for (i in 2:ncol(X)) lines(x,X[,i],col=i)
require(mgcv); n <- 100; set.seed(2)
x <- runif(n); y <- x + x^2*.2 + rnorm(n) *.1
plot(x,X[,1],ylim=range(X),type="l")
for (i in 2:ncol(X)) lines(x,X[,i],col=i)
vis.gam(b,theta=30,phi=30)
layout(1)
vis.gam(b,theta=30,phi=30)
vis.gam(b,theta=30,phi=30,col="terrain")
vis.gam(b,theta=30,phi=30,col=terrain)
vis.gam(b,theta=30,phi=30,color="terrain")
draw(b)
b <- bam(y~s(x0,x1),data=dat)
vis.gam(mod,theta=30,phi=30)
k <- 10; m <- 2
y <- y[order(x)];x <- x[order(x)]
b <- gam(y~s(x,k=k,m=m),method="REML",
knots=list(x=seq(0,1,length=k)))
vis.gam(b,theta=30,phi=30)
b
plot(b)
b <- bam(y~s(x0,x1)+s(x1a,x2,m=c(2,0))+x2,data=dat,discrete=TRUE)
vis.gam(b,theta=30,phi=30)
x<-seq(1,10,by=100)
x<-seq(1,10,length=100)
y<-seq(1,10,lenght=100)
y<-seq(1,10,length.out = =100)
y<-seq(1,10,length.out = 100)
df<-data.frame(x,y)
head(df)
d<-expand.grid(x,y)
head(d)
almejas <- read.table("C:/RD/almejas.txt", header = TRUE)
str(almejas)
# opción 1
plot(almejas$largo, almejas$peso.seco, pch = 19, xlab = "Largo", ylab = "Peso")
loess.model <- loess(peso.seco ~ largo, data = almejas)
largo <- seq(min(almejas$largo), max(almejas$largo), length = 500)
predPeso <- predict(loess.model, newdata = data.frame(largo))
lines(largo, predPeso, col = "blue", lwd = 2)
# opción 2
library(car)
d[1:100,]
?gamSim
a<-gamSim(eg=1,n=400,dist="normal",scale=2,verbose=TRUE)
head(a)
x<-c(rep(1:5,2),rep(1:5,2))
y<-c(rep(1:5,2),rep(1:5,2))
cbind(x,y)
cbind(x,sort(y))
a<-gamSim(eg=1,n=400,dist="normal",scale=2,verbose=TRUE)
head(a)
m<-gam(s(x0,x2),data=a)
m<-gam(y~s(x0,x2),data=a)
m0<-gam(y~s(x0)+s(x1),data=a)
summary(m)
summary(m0)
vis.gam(m0,theta=30,phi=30)
summary(m0)
m0<-gam(y~s(x0,k=10)+s(x1,k=10),data=a)
summary(m0)
m0<-gam(y~s(x5,k=10)+s(x2,k=10),data=a)
head(a)
m0<-gam(y~s(f0,k=10)+s(f2,k=10),data=a)
summary(m0)
set.seed(20)
dat <- gamSim(1, n = 400, dist = "normal", scale = 2, verbose = FALSE)
mod <- gam(y ~ s(x2) + s(x3), data = dat, method = "REML")
summary(mod)
m1 <- gam(y ~ s(x0) + s(x2), data = dat, method = "REML")
m2 <- gam(y ~ s(x0,x2), data = dat, method = "REML")
m3 <- gam(y ~ te(x0,x2), data = dat, method = "REML")
vis.gam(m1,theta=30,phi=30,color="terrain")
vis.gam(m1,theta=30,phi=40,color="terrain")
vis.gam(m1,theta=40,phi=30,color="terrain")
vis.gam(m2,theta=40,phi=30,color="terrain")
vis.gam(m3,theta=40,phi=30,color="terrain")
vis.gam(m1,plot.type="contour",color="terrain")
vis.gam(m2,plot.type="contour",color="terrain")
vis.gam(m3,plot.type="contour",color="terrain")
